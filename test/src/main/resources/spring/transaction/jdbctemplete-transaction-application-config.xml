<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	 xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 트랜잭션이 적용되기를 원하는 서비스 객체 -->
	<context:annotation-config/>
	<bean id="fooService" class="transaction.service.impl.JdbcTempleteFooService"/>

	<tx:annotation-driven transaction-manager="txManager"/>


	<!-- 트랜잭션이 적용된 어드바이스 (무슨 일이 발생하는 지는 아래의 <aop:advisor/> 빈을 봐라.) -->
<!--	<tx:advice id="txAdvice" transaction-manager="txManager">
		&lt;!&ndash; 트랜잭셔널 의미(the transactional semantics)... &ndash;&gt;
		<tx:attributes>
			&lt;!&ndash; 'get'으로 시작하는 모든 메서드들은 읽기전용이다 &ndash;&gt;
			<tx:method name="get*" read-only="true"/>

			&lt;!&ndash; 다름 메서드들은 기본 트랜잭션 설정을 사용한다. (아래를 참고) &ndash;&gt;
			<tx:method name="*" propagation="REQUIRES_NEW"/>
		</tx:attributes>
	</tx:advice>

	&lt;!&ndash; 위의 FooService 인터페이스가 정의한 연산의
      모든 실행에 트랜잭션이 적용된 어드바이스가 실행된다는 것을 보장한다. &ndash;&gt;
	<aop:config>
		<aop:pointcut id="fooServiceOperation" expression="execution(* transaction.service.FooService.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="fooServiceOperation"/>
	</aop:config>-->

	<!-- DataSource를 잊지 마라 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.h2.Driver"/>
		<property name="url" value="jdbc:h2:mem:test;MODE=Oracle"/>
		<property name="username" value="sa"/>
		<property name="password" value=""/>
	</bean>

	<!-- 유사하게 PlatformTransactionManager도 잊지 마라 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<bean id="jdbcTemplete" class = "org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 다른 <bean/> 정의는 여기에 정의한다 -->
    

	  
	  

</beans>

